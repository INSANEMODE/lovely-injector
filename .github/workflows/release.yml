name: Release

on:
  workflow_dispatch:
  push:
    tags:
      - "v[0-9]+.*"

jobs:
  prepare:
    name: Create draft release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4


  # build-windows:
  #   needs: prepare
  #   runs-on: windows-latest
  #   strategy:
  #     matrix:
  #       target:
  #         - x86_64-pc-windows-msvc

  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4

  #     - name: Setup toolchain
  #       uses: dtolnay/rust-toolchain@stable
  #       with:
  #         target: ${{ matrix.target }}
  #     - name: Setup Cache
  #       uses: Swatinem/rust-cache@v2
        
  #     - name: Build
  #       run: cargo build --target ${{ matrix.target }} --package lovely-win --release

  #     - name: Compress
  #       run: |
  #         cd ./target/${{ matrix.target }}/release/
  #         7z a "lovely-${{ matrix.target }}.zip" version.dll
  #         mv "lovely-${{ matrix.target }}.zip" ${{ github.workspace }}


  #     - name: Upload Artifacts
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: ${{ runner.os }} Build
  #         path: |
  #           lovely-${{ matrix.target }}.zip

  #testing android support
  build-unix:
    needs: prepare
    strategy:
      matrix:
        target:
          - aarch64-linux-android
          - armv7-linux-androideabi
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup toolchain
        uses: dtolnay/rust-toolchain@nightly
        with:
          target: ${{ matrix.target }}
      - name: Install Cross
        shell: bash
        run: |
          curl -L --proto '=https' --tlsv1.2 -sSf https://raw.githubusercontent.com/cargo-bins/cargo-binstall/main/install-from-binstall-release.sh | bash
          cargo binstall --no-confirm cross


      - name: Install cargo-zigbuild
        run: |
          pip3 install cargo-zigbuild
          
      - name: Modify Rust Toolchain
        run: rustup target add armv7-linux-androideabi aarch64-linux-android --toolchain nightly
      - name: Verify Rust Toolchain
        run: rustup show
      - name: Verify Targets
        run: rustup target list --installed

      - name: Build
        run: cross zigbuild --verbose --target ${{ matrix.target }} --package lovely-unix --release

      - name: Compress tar.gz
        run: |
          cp ./crates/lovely-unix/run_lovely_linux.sh ./target/${{ matrix.target }}/release/
          cd ./target/${{ matrix.target }}/release/
          tar czfv lovely-${{ matrix.target }}.tar.gz liblovely.so run_lovely_linux.sh
          mv "lovely-${{ matrix.target }}.tar.gz" ${{ github.workspace }}
          
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }} Build
          path: |
            lovely-${{ matrix.target }}.tar.gz

